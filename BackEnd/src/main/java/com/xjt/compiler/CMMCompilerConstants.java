/* Generated By:JJTree&JavaCC: Do not edit this line. CMMCompilerConstants.java */
package com.xjt.compiler;
/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CMMCompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int IF = 7;
  /** RegularExpression Id. */
  int ELSE = 8;
  /** RegularExpression Id. */
  int WHILE = 9;
  /** RegularExpression Id. */
  int READ = 10;
  /** RegularExpression Id. */
  int WRITE = 11;
  /** RegularExpression Id. */
  int INT = 12;
  /** RegularExpression Id. */
  int REAL = 13;
  /** RegularExpression Id. */
  int MAIN = 14;
  /** RegularExpression Id. */
  int VOID = 15;
  /** RegularExpression Id. */
  int INTEGER_LITERAL = 16;
  /** RegularExpression Id. */
  int REAL_LITERAL = 17;
  /** RegularExpression Id. */
  int IDENTIFIER = 18;
  /** RegularExpression Id. */
  int LETTER = 19;
  /** RegularExpression Id. */
  int DIGIT = 20;
  /** RegularExpression Id. */
  int PLUS = 21;
  /** RegularExpression Id. */
  int MINUS = 22;
  /** RegularExpression Id. */
  int MULTIPLY = 23;
  /** RegularExpression Id. */
  int DIVIDE = 24;
  /** RegularExpression Id. */
  int ASSIGN = 25;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"read\"",
    "\"write\"",
    "\"int\"",
    "\"real\"",
    "\"main\"",
    "\"void\"",
    "<INTEGER_LITERAL>",
    "<REAL_LITERAL>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\";\"",
    "\"[\"",
    "\"]\"",
    "\">\"",
    "\"<\"",
    "\"==\"",
    "\"<>\"",
    "\">=\"",
    "\"<=\"",
  };

}
